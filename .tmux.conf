# Global tmux prefix for commands
# C-s requires flow control to be turned off in your shell: stty -ixon -ixoff
set -g prefix C-s
unbind C-b
bind C-s send-prefix

# Allows you to always use the "attach" command, never worry about "new"
# TODO: Enabling this means that re-sourcing this file won't work for existing
#       sessions. Find a better way. Maybe a bg `tmux start-server` on boot?
# new-session

# Prevent tmuxinator from colliding rbenv versions
set-environment -gu RBENV_VERSION
set-environment -gu RBENV_DIR

# Use vi mode for navigation
setw -g mode-keys vi
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R
bind -r C-h select-window -t :-
bind -r C-l select-window -t :+

bind L last-window

# Index windows from 1, for more logical switching
# set -g base-index 1
set-option -g base-index 1
set-window-option -g pane-base-index 1

set -g default-terminal "screen-256color"
# TODO: change this to "... -l zsh" after switching
# TODO: is there a way to only execute this line on OS X ???
# TODO: Should we be using the --wrap-pbcopy-and-pbpaste brew flag for this?
set -g default-command "reattach-to-user-namespace -l bash"

# Setup 'v' to begin selection as in Vim
bind-key -t vi-copy v begin-selection
bind-key -t vi-copy y copy-pipe "reattach-to-user-namespace pbcopy"

# Update default binding of `Enter` to also use copy-pipe
unbind -t vi-copy Enter
bind-key -t vi-copy Enter copy-pipe "reattach-to-user-namespace pbcopy"

# Window titles and names
setw -g automatic-rename on
set -g set-titles on

# Set window notifications
setw -g monitor-activity on
set -g visual-activity on
# TODO: was visual-content replaced or only removed?
# set -g visual-content on

# Better window resizing
# see: https://mutelight.org/practical-tmux
setw -g aggressive-resize on

# TODO: nested sessions
# http://unix.stackexchange.com/questions/130730/how-to-quickly-send-commands-to-nested-tmux-sessions

# Quick way to reload the tmux config
bind R source-file ~/.tmux.conf

# Enable mouse selection of things
set -g mouse on

# More memorable window splits
bind - split-window -v
bind _ split-window -v
bind | split-window -h

# Resize panes like vim
bind-key -r < resize-pane -L 3
bind-key -r > resize-pane -R 3
bind-key -r + resize-pane -U 1
bind-key -r = resize-pane -D 1

# Confirmation before closing panes
# unbind C-d
# bind -n C-d confirm-before -p "kill-pane #P? (y/n)" kill-pane

# TODO: paste buffers

# Statusbar settings

# Use vi-style key bindings in the status line
set -g status-keys vi

# Large scroll history
set -g history-limit 10000

# Amount of time for which status line messages and other indicators
# are displayed. time is in milliseconds.
set -g display-time 2000

# Default statusbar colors
set-option -g status-fg colour8
set-option -g status-bg colour11

setw -g window-status-current-fg colour15
setw -g window-status-current-bg colour166
setw -g window-status-current-attr bold
setw -g window-status-current-format ' #W#F '
setw -g window-status-format ' #W#F '
setw -g window-status-attr none

# Pane dividers colors

setw -g pane-border-fg white
setw -g pane-active-border-fg colour11

set-option -g status-left '⣿ #[bold]❐ #S:#I#[default] ⡇'
set-option -g status-right '⡇ #[bold]#(whoami) ● #H#[default] '

set-option -g status-right-length 1000
set-option -g status-left-length 60

set -s escape-time 0

# Enter history mode using prefix+[, select with space, hit enter to copy
# New session: tmux new -s foobar
# Detatch session: prefix-d
# Attach to existing session: tmux attach -t foobar
# New window: prefix-c
# Name a window: prefix-,
# Kill a pane or window: prefix-x
# prefix-I to reload plugins, and prefix-U to update them
# prefix-: to send a manually typed command to tmux
# Don't need to reload .tmux.conf if tpm_plugins is the only changed variable
# Don't need the resurrect strategies for vim/nvim when using vim-prosession

# List of plugins
# Supports `github_username/repo` or full git repo URLs
set -g @tpm_plugins '              \
  tmux-plugins/tmux-resurrect      \
  tmux-plugins/tmux-continuum      \
  tmux-plugins/tmux-open           \
  tmux-plugins/tmux-copycat        \
  tmux-plugins/tmux-yank           \
'
# TODO: can't have it self-track the tmux-plugins/tpm repo because I grab it
#       using myrepos/vcsh which stores the git index elsewhere...
  # tmux-plugins/tpm                 \
  # tmux-plugins/tmux-sensible       \
# Other examples:
# github_username/plugin_name    \
# git@github.com/user/plugin     \
# git@bitbucket.com/user/plugin  \

# tmux-resurrect
set -g @resurrect-save 'S'
# TODO: this injects history-saving commands into each tmux pane on save, which
#       happens quite often with the continuum plugin and then shows activity
#       for all those panes, huge pain in the ass right now
# set -g @resurrect-save-bash-history 'on'

# tmux-continuum
set -g @continuum-restore 'on'
# TODO: not sure if I want to auto-start here, seems aggressive
# set -g @continuum-boot 'on'
# set -g @continuum-boot-options 'iterm'

# Initializes TMUX plugin manager.
# Keep this line at the very bottom of tmux.conf.
run-shell '~/.tmux/plugins/tpm/tpm'
